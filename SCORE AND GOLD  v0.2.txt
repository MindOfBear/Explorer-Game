#include <iostream> 
#include <conio.h>
#include <windows.h>
#include <stdlib.h>
#include <stdio.h>
using namespace std;
void playGame();
void mainMenu();
void cc();
void gotoXY(short linie, short coloana);

// CULORI
#define NORMAL "\033[0;37m";
#define RED "\033[0;31m"
#define GOLD "\033[0;33m"
#define GREEN "\033[0;32m"
#define BLUE "\033[0;34m"
#define CYAN "\033[1;36m"

// COMENZI SAGETI
#define UP 72
#define DOWN 80
#define LEFT 75
#define RIGHT 77

// dim harta
int posX = 10;
int posY = 25;
// pct
int score = 0;
int bullets = 2;
int senzor = 0;
int comoara1 = 1;
int comoara2 = 1;

void aboutGame() {
	cc();
	gotoXY(3, 6);
	cout << "Created by ";
	cout << GOLD "Nicolaescu Ovidiu-Constantin\n" NORMAL;
	cout << "You can control the player with ARROWS!\nYou have to collect all the GOLD without being eaten by the 2 monsters\nEventualy, if you meet the monsters you can kill them with your gun!\nBut be careful! You have only 2 bullets!";
	cout << CYAN "\n\nPress any key to go to main menu!" NORMAL;
	_getch();
	mainMenu();
}

typedef struct { short X; short Y; }coord;
void gotoXY(short linie, short coloana) {
	COORD coord; //structura care defineste coordonatele unui punct de pe consola
	coord.X = coloana;
	coord.Y = linie;

	HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleCursorPosition(hConsole, coord);
}

void drawMap(int linii, int coloane) {
	for (int i = 0; i <= linii; i++) {
		for (int j = 0; j <= coloane; j++)
			if (i == linii || j == coloane || i == 0 || j == 0) {
				gotoXY(i, j);
				cout << CYAN "#" NORMAL;
			}
	}

	////////   GOLD   ///////////
	gotoXY(5, 23);
	cout << GREEN "$" NORMAL;
	gotoXY(7, 12);
	cout << GREEN "$" NORMAL;


	gotoXY(5, 30);
	cout <<  "Score: ";
	gotoXY(6, 30);
	cout << "Direction:";
	for (int i = 4; i < 8; i++) {
		gotoXY(i, 3);
		cout << RED "X" NORMAL;
	}
	for (int i = 8; i < 13; i++) {
		gotoXY(3, i);
		cout << RED "X" NORMAL;
	}
	for (int i = 15; i < 20; i++) {
		gotoXY(8, i);
		cout << RED "X" NORMAL;
	}
	for (int i = 4; i < 9; i++) {
		gotoXY(6, i);
		cout << RED "X" NORMAL;
	}
	for (int i = 2; i < 6; i++) {
		gotoXY(i, 18);
		cout << RED "X" NORMAL;
	}
	for (int i = 6; i < 9; i++) {
		gotoXY(i, 9);
		cout << RED "X" NORMAL;
	}
	gotoXY(1, 1);
	cout << GOLD "O" NORMAL;
}

void cc() {
	system("cls");
}

void mainMenu() {
	//system("COLOR 0A"); // CULOARE CONSOLA

	////// RESETAM VALORILE PENTRU urmatorul run;
	score = 0;
	bullets = 2;
	senzor = 0;
	comoara1 = 1;
	comoara2 = 1;
	//////
	cc();
	cout << "  Welcome, ";
	cout << GOLD "explorer" NORMAL;
	cout << "!";
	cout << "\nPress a key to select:";
	cout << GOLD "\n\n1 - Start Game\n2 - How to play!\n" NORMAL;
	char userInput;
	userInput = _getch();
	while (userInput != '1' && userInput != '2' && userInput != '0') {
		cout << "\nError! ";
		cout << "Insert a valid number!\n";
		userInput = _getch();
	}
	switch (userInput) {
	case '1':
		cc();
		playGame();
		break;
	case '2':
		cc();
		aboutGame();
		break;
	case '0':
		exit(0);
	}
}


void player() {
	cout << GOLD "O" NORMAL;
}

void scoreUpdate() {
	gotoXY(5, 37);
	cout << "    ";
	gotoXY(5, 37);
	cout << GOLD;
	cout << score;
	cout << NORMAL;
}

void playGame() {

	int linie = 1, coloana = 1;
	int pointDirect = 1;
	drawMap(posX, posY);
	int direction = 0;
	while (1) {
		//////////  VER GOLD 
		if (linie == 5 && coloana == 23) {
			if (comoara1 == 1) {
				score += 100;
			}
			comoara1 = 0;
		}
		if (linie == 7 && coloana == 12) {
			if (comoara2 == 1) {
				score += 100;
			}
			comoara2 = 0;
		}

		// n-au mai ramas comori break

		if (comoara1 == 0 && comoara2 == 0) {
			gotoXY(7, 30);
			cout << GOLD "CONGRATS! You colected the money without being eaten!" NORMAL;
			gotoXY(8, 30);
			cout << "Press any key to go to main menu!";
			_getch();
			mainMenu();
		}

		switch ((direction = _getch())) {
		case UP:
			score += -1;
			scoreUpdate();
			gotoXY(6, 41);
			cout << GOLD "^" NORMAL;
			if (pointDirect == 1) {
				if (linie > 1) {
					gotoXY(linie, coloana);
					cout << " ";
					gotoXY(linie -= 1, coloana);
					player();
				}
			}
			else {
				pointDirect = 1;
			}
			break;
		case DOWN:
			score += -1;
			scoreUpdate();
			gotoXY(6, 41);
			cout << GOLD "V" NORMAL;
			if (pointDirect == 2) {
				if (linie < posX - 1) {
					gotoXY(linie, coloana);
					cout << " ";
					gotoXY(linie += 1, coloana);
					player();
				}
			}
			else {
				pointDirect = 2;
			}
			break;
		case LEFT:
			score += -1;
			scoreUpdate();
			gotoXY(6, 41);
			cout << GOLD "<" NORMAL;
			if (pointDirect == 3) {
				if (coloana > 1) {
					gotoXY(linie, coloana);
					cout << " ";
					gotoXY(linie, coloana -= 1);
					player();
				}
			}
			else {
				pointDirect = 3;
			}
			break;
		case RIGHT:
			score += -1;
			scoreUpdate();
			gotoXY(6, 41);
			cout << GOLD ">" NORMAL;
			if (pointDirect == 4) {
				if (coloana < posY - 1) {
					gotoXY(linie, coloana);
					cout << " ";
					gotoXY(linie, coloana += 1);
					player();
				}
			}
			else {
				pointDirect = 4;
			}
			break;
		}
	}
}



void main() {
	mainMenu();
}